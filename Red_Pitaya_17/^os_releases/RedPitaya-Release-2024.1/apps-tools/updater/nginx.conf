        location /update_download {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                local args = ngx.req.get_uri_args()
                local ecosystem = args.ecosystem or 0
                ngx.say(ecosystem)

                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/killwget.sh > /dev/null")
                handle:close()

                local handle2 = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/download.sh "..ecosystem.." > /dev/null &")
                handle2:close()

                ngx.say(res)
            ';
        }

        location /check_linux_os {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                local args = ngx.req.get_uri_args()
                local ecosystem = args.ecosystem or 0
                local type = args.type or 0
                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/linux_ver.sh "..type.." "..ecosystem)
                local res = handle:read("*a")
                handle:close()
                ngx.say(res)
            ';
        }

        location /update_check {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/check.sh")
                local res = handle:read("*a")
                handle:close()

                ngx.say(res)
            ';
        }

        location /update_list {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                local args = ngx.req.get_uri_args()
                local type = args.type or 0
                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/list.sh "..type)
                local res = handle:read("*a")
                handle:close()

                ngx.say(res)
            ';
        }

        location /update_list_fw {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                local args = ngx.req.get_uri_args()
                local type = args.type or 0
                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/list_fw.sh "..type)
                local res = handle:read("*a")
                handle:close()

                ngx.say(res)
            ';
        }

        location /update_extract {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/extract.sh")
                local res = handle:read("*a")
                handle:close()

                ngx.say(res)
            ';
        }

        location /update_ecosystem {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type text/plain;

            content_by_lua '
                os.execute("/bin/cp -f /opt/redpitaya/www/apps/updater/daemon /tmp && /tmp/daemon")
                ngx.say("OK")
            ';
        }

        location /get_info {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            default_type application/json;


            content_by_lua '

                local f = io.open("/opt/redpitaya/www/apps/info/info.json", "r")
                local content = f:read("*all")
                content = content:sub(1, -4)
                f:close()

                f = io.popen("/opt/redpitaya/bin/monitor -n")
                local stem_name = f:read("*all")
                f:close()

                f = io.popen("/opt/redpitaya/bin/monitor -i")
                local stem_version = f:read("*all")
                f:close()

                local linux_ver = ""
                local f2 = io.open("/root/.version", "r")
                if f2 then
                    linux_ver = f2:read("*all")
                    f2:close()
                end

                ngx.say(content .. [[ ,"stem_ver": ]]  .. stem_version  .. [[\n,"stem_name": ]] .. [[ "]] .. stem_name .. [[" ]] .. [[\n,"sd_linux_ver": ]] .. linux_ver .. "}")

            ';
        }

        location /update_changelog {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Content-type' 'text/plain; charset=utf-8';

            default_type text/plain;

            content_by_lua '
                local args = ngx.req.get_uri_args()
                local id = args.id or 0
                local handle = io.popen("bash /opt/redpitaya/www/apps/updater/scripts/changelog.sh "..id)
                local res = handle:read("*a")
                handle:close()

                ngx.say(res)
            ';
        }

        location /get_sysinfo {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Content-type' 'text/plain; charset=utf-8';

            default_type text/plain;

            content_by_lua '
                local f = io.open("/tmp/sysinfo.json", "r")
                local content = f:read("*all")
                f:close()
                ngx.say(content)
            ';
        }

        location /delete_settings {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Content-type' 'text/plain; charset=utf-8';

            default_type text/plain;

            content_by_lua '
                local handle = io.popen("rm -rf /root/.config/redpitaya/apps/*")
                handle:close()
                ngx.say("OK")
            ';
        }

        location /check_bootbin {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Content-type' 'text/plain; charset=utf-8';

            default_type text/plain;

            content_by_lua '
                local handle = io.popen("cmp /opt/redpitaya/boot.bin /opt/redpitaya/uboot/boot_512Mb_ram.bin")
                local res = handle:read("*a")
                handle:close()

                ngx.say(res)
            ';
        }

        location /copy_bootbin_512 {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Content-type' 'text/plain; charset=utf-8';

            default_type text/plain;

            content_by_lua '
                local handle = io.popen("rw; cp -f /opt/redpitaya/uboot/boot_512Mb_ram.bin /opt/redpitaya/boot.bin;cp -f /opt/redpitaya/uboot/u-boot_512Mb_ram.scr /opt/redpitaya/u-boot.scr")
                local res = handle:read("*a")
                handle:close()
                ngx.say(res)
            ';
        }

        location /copy_bootbin_1G {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Content-type' 'text/plain; charset=utf-8';

            default_type text/plain;

            content_by_lua '
                local handle = io.popen("rw; cp -f /opt/redpitaya/uboot/boot_1Gb_ram.bin /opt/redpitaya/boot.bin;cp -f /opt/redpitaya/uboot/u-boot_1Gb_ram.scr /opt/redpitaya/u-boot.scr")
                local res = handle:read("*a")
                handle:close()
                ngx.say(res)
            ';
        }
